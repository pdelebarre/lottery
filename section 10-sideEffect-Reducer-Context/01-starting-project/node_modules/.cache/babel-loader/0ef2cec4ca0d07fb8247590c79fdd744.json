{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/udemy/react/10-sideEffect-Reducer-Context/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n\n    case \"INPUT_BLUR\":\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n\n    default:\n      return {\n        value: '',\n        isValid: false\n      };\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  }); // useEffect(()=> {\n  //   console.log('EFFECT RUNNING');\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   }\n  // },[enteredEmail]);\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      //debouncing\n      console.log('check form validity');\n      setFormIsValid(emailState.isValid && passwordState.isValid);\n    }, 500);\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier); //clear timer\n    }; //cleanup before side effect runs - after 1st exec\n  }, [emailState, passwordState]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   passwordState.isValid && event.target.value.trim().length>6\n    //   //enteredPassword.trim().length > 6 && event.target.value.includes('@')\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    }); //lost focus\n  };\n\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"PJri2ViHA2Z09257KaCSdUxB1H4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/udemy/react/10-sideEffect-Reducer-Context/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if(action.type === 'USER_INPUT'){\n    return {value: action.val, isValid:action.val.includes('@')};\n  }\n  if(action.type==='INPUT_BLUR') {\n    return {value: state.value, isValid: state.value.includes('@')};\n  }\n  return {value: '', isValid:false};\n};\n\nconst passwordReducer = (state,action) => {\n  switch(action.type) {\n    case \"USER_INPUT\": return {value: action.val, isValid: action.val.trim().length>6};\n    case \"INPUT_BLUR\": return {value: state.value, isValid: state.value.trim().length>6};\n    default: return {value: '', isValid: false};\n  }\n  \n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail]=useReducer(emailReducer,{value: '', isValid:false});\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer,{value:'', isValid:false});\n\n  // useEffect(()=> {\n  //   console.log('EFFECT RUNNING');\n\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   }\n  // },[enteredEmail]);\n\n  useEffect(() => {\n    const identifier= setTimeout(() => { //debouncing\n      console.log('check form validity');\n      setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier); //clear timer\n    }; //cleanup before side effect runs - after 1st exec\n  }, [emailState, passwordState]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   passwordState.isValid && event.target.value.trim().length>6\n    //   //enteredPassword.trim().length > 6 && event.target.value.includes('@')\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({type:\"USER_INPUT\", val:event.target.value});\n\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length >6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({type: 'INPUT_BLUR'}); //lost focus\n\n  };\n\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type:\"INPUT_BLUR\"});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}