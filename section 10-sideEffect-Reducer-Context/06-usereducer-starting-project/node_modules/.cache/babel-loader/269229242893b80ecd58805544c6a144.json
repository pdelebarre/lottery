{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/udemy/react/10-sideEffect-Reducer-Context/06-usereducer-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {};\n\n    case \"INPUT_BLUR\":\n      return;\n\n    default:\n      return;\n  }\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {};\n\n    case \"INPUT_BLUR\":\n      return;\n\n    default:\n      return;\n  }\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  //const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const authCtx = useContext(AuthContext);\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    //setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //   enteredEmail.includes(\"@\") && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState, passwordState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"i+feaD3W9bkwFJ+nOsHW4cCLFO8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/udemy/react/10-sideEffect-Reducer-Context/06-usereducer-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","emailReducer","state","action","type","passwordReducer","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","value","isValid","passwordState","dispatchPassword","authCtx","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","val","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../store/auth-context\";\n\nconst emailReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {};\n    case \"INPUT_BLUR\":\n      return;\n    default:\n      return;\n  }\n};\n\nconst passwordReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_INPUT\":\n      return {};\n    case \"INPUT_BLUR\":\n      return;\n    default:\n      return;\n  }\n}\n\nconst Login = (props) => {\n // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  //const [emailIsValid, setEmailIsValid] = useState();\n // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  //const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 500);\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    //setEnteredEmail(event.target.value);\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n    // setFormIsValid(\n    //   event.target.value.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n    \n    // setFormIsValid(\n    //   enteredEmail.includes(\"@\") && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState, passwordState);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}