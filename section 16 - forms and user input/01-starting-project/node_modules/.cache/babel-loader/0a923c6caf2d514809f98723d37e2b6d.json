{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n\n  if (action.type === 'BLUR') {\n    return {\n      isTouched: true,\n      value: state.value\n    };\n  }\n\n  if (action.type === 'RESET') {\n    return initialInputState;\n  }\n\n  return inputStateReducer;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Volumes/LaCie/Dev/udemy/react/section 16 - forms and user input/01-starting-project/src/hooks/use-input.js"],"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,SAAS,EAAE;AAFa,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,MAAGA,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4B;AAC1B,WAAO;AAACL,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAf;AAAsBC,MAAAA,SAAS,EAACE,KAAK,CAACF;AAAtC,KAAP;AACD;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA2B;AACzB,WAAO;AAACJ,MAAAA,SAAS,EAAE,IAAZ;AAAkBD,MAAAA,KAAK,EAAEG,KAAK,CAACH;AAA/B,KAAP;AACD;;AACD,MAAGI,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4B;AAE1B,WAAON,iBAAP;AAED;;AACD,SAAOG,iBAAP;AACD,CAbD;;AAeA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACI,iBAAD,EAAoBH,iBAApB,CAAzC;AAEA,QAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAZ,CAAlC;AACA,QAAMW,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACP,SAA7C;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE,OAAP;AAAgBL,MAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAad;AAApC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMe,gBAAgB,GAAIF,KAAD,IAAW;AAElCJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMW,KAAK,GAAG,MAAM;AAElBP,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAHD;;AAKA,SAAO;AACLL,IAAAA,KAAK,EAAEQ,UAAU,CAACR,KADb;AAELiB,IAAAA,OAAO,EAAEP,YAFJ;AAGLC,IAAAA,QAAQ,EAAEA,QAHL;AAILC,IAAAA,kBAJK;AAKLG,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA5BD;;GAAMV,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputState = {\n  value: \"\",\n  isTouched: false,\n};\n\nconst inputStateReducer = (state, action) => {\n  if(action.type === 'INPUT') {\n    return {value: action.value, isTouched:state.isTouched}\n  }\n  if(action.type === 'BLUR') {\n    return {isTouched: true, value: state.value}\n  }\n  if(action.type === 'RESET') {\n\n    return initialInputState\n    \n  }\n  return inputStateReducer;\n};\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (event) => {\n    dispatch({type: 'INPUT', value: event.target.value});\n  };\n\n  const inputBlurHandler = (event) => {\n    \n    dispatch({type: 'BLUR'});\n  };\n\n  const reset = () => {\n    \n    dispatch({type: 'BLUR'});\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}