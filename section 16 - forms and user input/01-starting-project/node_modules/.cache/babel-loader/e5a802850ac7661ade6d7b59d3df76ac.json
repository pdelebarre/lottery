{"ast":null,"code":"var _jsxFileName = \"/Volumes/LaCie/Dev/udemy/react/section 16 - forms and user input/01-starting-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n  const nameInputRef = useRef();\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(`name input is valid`);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(`enteredName`, enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(`enteredValue`, enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"+Mb946CMkd96IhQqLNJGmOxGNvI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Volumes/LaCie/Dev/udemy/react/section 16 - forms and user input/01-starting-project/src/components/SimpleInput.js"],"names":["useRef","useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","nameInputRef","console","log","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","enteredValue","current","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAMQ,YAAY,GAAGT,MAAM,EAA3B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGK,kBAAH,EAAuB;AACrBG,MAAAA,OAAO,CAACC,GAAR,CAAa,qBAAb;AACD;AACF,GAJQ,EAIN,CAACJ,kBAAD,CAJM,CAAT;;AAMA,QAAMK,sBAAsB,GAAIC,KAAD,IAAW;AACxCP,IAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAIH,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAIZ,WAAW,CAACa,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BV,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAa,aAAb,EAA2BN,WAA3B;AAEA,UAAMc,YAAY,GAAGV,YAAY,CAACW,OAAb,CAAqBL,KAA1C;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAb,EAA4BQ,YAA5B;AAEAb,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAhBD;;AAkBA,QAAMe,gBAAgB,GAAGd,kBAAkB,GACvC,cADuC,GAEvC,sBAFJ;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAES,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,GAAG,EAAEZ,YADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,QAAQ,EAAEG;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUG,CAACL,kBAAD,iBACC;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAaE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvDD;;GAAMJ,W;;KAAAA,W;AAyDN,eAAeA,WAAf","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n  const nameInputRef = useRef();\n\n  useEffect(() => {\n    if(enteredNameIsValid) {\n      console.log(`name input is valid`)\n    }\n  }, [enteredNameIsValid])\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n\n    console.log(`enteredName`, enteredName);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(`enteredValue`, enteredValue);\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputClasses = enteredNameIsValid\n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n        />\n      </div>\n      {!enteredNameIsValid && (\n        <p className=\"error-text\">name must not be empty</p>\n      )}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}