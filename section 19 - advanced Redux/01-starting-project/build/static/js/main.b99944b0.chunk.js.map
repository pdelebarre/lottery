{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/ui-slice.js","store/cart-slice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","App.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","reducers","toggle","state","uiActions","actions","cartSlice","items","totalQuantity","addItemToCart","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","store","configureStore","reducer","ui","cart","Card","props","className","classes","card","children","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b99944b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import { createSlice } from \"@reduxjs/toolkit\"; \n\nconst uiSlice = createSlice({\n    name: 'ui',\n    initialState: { cartIsVisible: false },\n    reducers: { \n        toggle(state) {\n            state.cartIsVisible = !state.cartIsVisible;\n        }\n    }\n});\n\nexport const uiActions= uiSlice.actions\nexport default uiSlice\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { items: [], totalQuantity: 0 },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n          existingItem.quantity++;\n          existingItem.totalPrice+=newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n        const id = action.payload;\n        const existingItem = state.items.find(item => item.id === id);\n        state.totalQuantity--;\n        if(existingItem.quantity===1) {\n            state.items=state.items.filter(item => item.id !==id)\n         } else {\n            existingItem.quantity--;\n            existingItem.totalPrice-=existingItem.price;\n        }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions\nexport default cartSlice\n\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport uiSlice from \"./ui-slice\";\nimport cartSlice from \"./cart-slice\";\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\n});\n\nexport default store;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from \"./CartItem.module.css\";\n\nimport { cartActions } from \"../../store/cart-slice\";\nimport { useDispatch } from \"react-redux\";\n\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props.item;\n\n  const dispatch = useDispatch();\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n  const addItemHandler = () => {\n    dispatch(cartActions.addItemToCart({id,price,title}));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeItemHandler}>-</button>\n          <button onClick={addItemHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nimport { useSelector } from \"react-redux\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n          key={item.id}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              total: item.totalPrice,\n              price: item.price,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from \"./CartButton.module.css\";\nimport {uiActions} from \"../../store/ui-slice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst CartButton = (props) => {\n  const dispatch= useDispatch();\n  const cartQuantity = useSelector(state => state.cart.totalQuantity)\n  const cartButtonHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button className={classes.button} onClick={cartButtonHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  { id: \"p1\", price: 6, title: \"my first book\" },\n  { id: \"p2\", price: 5, title: \"my second book\" },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.title}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import {useSelector} from \"react-redux\";\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\n\nfunction App() {\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n\n  return (\n    <Layout>\n      {cartIsVisible && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/index\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}