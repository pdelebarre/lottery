{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nconst URL = \"https://react-http-aaf74-default-rtdb.europe-west1.firebasedatabase.app/cart.json\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(URL);\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch data\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error...\",\n        message: \"Sending cart data failed...\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data...\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(URL, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success...\",\n        message: \"cart data saved...\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error...\",\n        message: \"Sending cart data failed...\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Volumes/LaCie/Dev/udemy/react/section 19 - advanced Redux/01-starting-project/src/store/cart-actions.js"],"names":["uiActions","cartActions","URL","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAAQC,WAAR,QAA2B,cAA3B;AAEA,MAAMC,GAAG,GACP,mFADF;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;;AAEA,UAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACD,KAVD;;AAYA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACH,WAAW,CAACY,WAAZ,CAAwB;AAC7BC,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAT,IAAkB,EADI;AACAC,QAAAA,aAAa,EAAEH,QAAQ,CAACG;AADxB,OAAxB,CAAD,CAAR;AAGD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CACNJ,SAAS,CAACiB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA3BD;AA4BD,CA7BM;AA+BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOlB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNJ,SAAS,CAACiB,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCsB,QAAAA,MAAM,EAAE,KADwB;AAEhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACb,UAAAA,KAAK,EAACQ,IAAI,CAACR,KAAZ;AACrBC,UAAAA,aAAa,EAACO,IAAI,CAACP;AADE,SAAf;AAF0B,OAAN,CAA5B;;AAMA,UAAI,CAACT,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,KAVD;;AAYA,QAAI;AACF,YAAMc,WAAW,EAAjB;AACAnB,MAAAA,QAAQ,CACNJ,SAAS,CAACiB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,YAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KATD,CASE,OAAOJ,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CACNJ,SAAS,CAACiB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GAvCD;AAwCD,CAzCM","sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport {cartActions } from \"./cart-slice\"\n\nconst URL =\n  \"https://react-http-aaf74-default-rtdb.europe-west1.firebasedatabase.app/cart.json\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(URL);\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch data\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n          items: cartData.items || [], totalQuantity: cartData.totalQuantity\n    }));\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error...\",\n          message: \"Sending cart data failed...\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data...\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(URL, {\n        method: \"PUT\",\n        body: JSON.stringify({items:cart.items,\n        totalQuantity:cart.totalQuantity,}),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success...\",\n          message: \"cart data saved...\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error...\",\n          message: \"Sending cart data failed...\",\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}